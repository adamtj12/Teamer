//
//  JoinSquadWorker.swift
//  SampleCS
//
//  Created by Adam Johnston on 14/11/2018.
//  Copyright (c) 2018 Adam Johnston. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import FBSDKCoreKit
import FBSDKLoginKit
import Firebase

class JoinSquadWorker
{
    let db = Firestore.firestore()
    
    func getDocuments(currentInteractor: JoinSquadInteractor) {
        let queue = DispatchQueue(label: "com.app.queue")
        var localArray : NSMutableArray = []
        
        queue.sync {
            self.db.collection("groups").getDocuments() { (querySnapshot, err) in
                if let err = err {
                    print("Error getting documents: \(err)")
                } else {
                    let queue = DispatchQueue(label: "com.app.queue")
                    for document in querySnapshot!.documents {
                        print("\(document.documentID) => \(document.data())")
                        localArray.add(document.data() as NSDictionary)
                    }
                    let request = JoinSquad.Something.ResponseGroups(groupArray: localArray)
                    currentInteractor.ReturnGroups(result: request, currentInteractor: currentInteractor)
                }
            }
        }
    }
    
    func addPlayerToGroup(details: JoinSquad.Something.RequestToAdd, currentInteractor: JoinSquadInteractor){
        db.collection("users").whereField("Userid", isEqualTo: details.userId)
            .getDocuments() { (querySnapshot, err) in
                if let err = err {
                    print("Error getting documents: \(err)")
                } else {
                    var i = 0
                    for document in querySnapshot!.documents {
                        i+=1
                        print("\(document.documentID) => \(document.data())")
                        self.db.collection("users").document(document.documentID).updateData([
                            "groupName": details.selectedGroup.object(forKey: "groupName") as! String,
                            "groupId" : details.selectedGroup.object(forKey: "groupID") as! String
                            ])
                    }
                    currentInteractor.successfulGroupAddition(currentInteractor: currentInteractor)
                }
        }
    }
}
