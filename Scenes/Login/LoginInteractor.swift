//
//  LoginInteractor.swift
//  SampleCS
//
//  Created by Adam Johnston on 08/11/2018.
//  Copyright (c) 2018 Adam Johnston. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import FBSDKCoreKit
import FBSDKLoginKit
import Firebase


protocol LoginBusinessLogic
{
    func doSomething(request: Login.Something.Request)
    func doNothing(request: Login.Something.noTokenRequest)
    func AddUserToggleScreen(showing: Login.Something.AddUserToggleScreen)
    func returnedSuccessful(result: AuthDataResult)
    func addUserToFirebase(add: Login.Something.RegisterModel, currentInteractor: LoginInteractor)
    func loginToFirebase(add: Login.Something.RegisterModel, currentInteractor: LoginInteractor)
    func loginSuccessful(result: AuthDataResult)
    func loginToFirebaseFacebook(loginButton: FBSDKLoginButton, currentInteractor: LoginInteractor)
    func loginSuccessfulFacebook(add: Login.Something.PlayerModel)
    
}

protocol LoginDataStore
{
    //var name: String { get set }
}

class LoginInteractor: LoginBusinessLogic, LoginDataStore
{
    var presenter: LoginPresentationLogic?
    var worker: LoginWorker?
    //var name: String = ""
    
    // MARK: Do something
    
    func doSomething(request: Login.Something.Request)
    {
        worker = LoginWorker()
        worker?.doSomeWork()
        let tokenValue = Login.Something.Request()
        
        if((tokenValue.tokenString?.count)! > 0){
            let response = Login.Something.Response(alreadyLoggedIn: true)
            presenter?.presentSomething(response: response)
        }else{
            let response = Login.Something.Response(alreadyLoggedIn: false)
            presenter?.presentSomething(response: response)
        }
    }
    
    func doNothing(request: Login.Something.noTokenRequest)
    {
        worker = LoginWorker()
        let tokenValue = Login.Something.noTokenRequest()
        
        if((tokenValue.tokenString.count) > 0){
            let response = Login.Something.Response(alreadyLoggedIn: true)
            presenter?.presentSomething(response: response)
        }else{
            let response = Login.Something.Response(alreadyLoggedIn: false)
            presenter?.presentSomething(response: response)
        }
    }
    
    func AddUserToggleScreen(showing: Login.Something.AddUserToggleScreen)
    {
        worker = LoginWorker()
        worker?.checkViewShowing()
        let showValue = Login.Something.AddUserToggleScreen(showUserScreen: showing.showUserScreen)
        presenter?.toggleAddUserView(showing: showValue)
    }
    
    func addUserToFirebase(add: Login.Something.RegisterModel, currentInteractor: LoginInteractor){
        worker = LoginWorker()
        self.worker?.addUserToFirebase(details: add, currentInteractor: currentInteractor)
    }
    
    func returnedSuccessful(result: AuthDataResult){
        presenter?.displayAddedUserScreen(showing: result)
    }
    
    func loginToFirebase(add: Login.Something.RegisterModel, currentInteractor: LoginInteractor) {
        worker = LoginWorker()
        self.worker?.loginUserToFirebase(details: add, currentInteractor: currentInteractor)
    }
    
    func loginSuccessful(result: AuthDataResult){
        presenter?.displayLoggedInUserScreen(showing: result)
    }
    
    func loginToFirebaseFacebook(loginButton: FBSDKLoginButton, currentInteractor: LoginInteractor) {
        worker = LoginWorker()
        
        self.worker?.loginUserToFirebaseFacebook(loginButton, currentInteractor: currentInteractor)
        presenter?.displayLoggedInUserScreenFacebook()
    }
    
    func loginSuccessfulFacebook(add: Login.Something.PlayerModel) {
    }
    
}
